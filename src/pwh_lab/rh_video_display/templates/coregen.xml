<?xml version="1.0" encoding="UTF-8"?>
<RootFolder label="COREGEN" treetype="folder" language="COREGEN">
	<Folder label="VERILOG Component Instantiation" treetype="folder">
		<Template label="font_rom" treetype="template">
		</Template>
		<Template label="font" treetype="template">
		</Template>
		<Template label="divider" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
divider YourInstanceName (
    .clk(clk),
    .rfd(rfd),
    .dividend(dividend), // Bus [24 : 0] 
    .divisor(divisor), // Bus [24 : 0] 
    .quotient(quotient), // Bus [24 : 0] 
    .fractional(fractional)); // Bus [24 : 0] 

 
		</Template>
		<Template label="note_letters" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
note_letters YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [16 : 0] 
    .douta(douta)); // Bus [7 : 0] 

 
		</Template>
		<Template label="song1" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
song1 YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [6 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
		<Template label="lotr_song" treetype="template">
 
 
// The following must be inserted into your Verilog file for this
// core to be instantiated. Change the instance name and port connections
// (in parentheses) to your own signal names.
 
lotr_song YourInstanceName (
    .clka(clka),
    .addra(addra), // Bus [7 : 0] 
    .douta(douta)); // Bus [3 : 0] 

 
		</Template>
	</Folder>
	<Folder label="VHDL Component Instantiation" treetype="folder">
		<Template label="font_rom" treetype="template">
		</Template>
		<Template label="font" treetype="template">
		</Template>
		<Template label="divider" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component divider
    port (
    clk: IN std_logic;
    rfd: OUT std_logic;
    dividend: IN std_logic_VECTOR(24 downto 0);
    divisor: IN std_logic_VECTOR(24 downto 0);
    quotient: OUT std_logic_VECTOR(24 downto 0);
    fractional: OUT std_logic_VECTOR(24 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : divider
        port map (
            clk =&gt; clk,
            rfd =&gt; rfd,
            dividend =&gt; dividend,
            divisor =&gt; divisor,
            quotient =&gt; quotient,
            fractional =&gt; fractional);
 
		</Template>
		<Template label="note_letters" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component note_letters
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(16 downto 0);
    douta: OUT std_logic_VECTOR(7 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : note_letters
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="song1" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component song1
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(6 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : song1
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
		<Template label="lotr_song" treetype="template">
 
 
-- The following code must appear in the VHDL architecture header:
 
component lotr_song
    port (
    clka: IN std_logic;
    addra: IN std_logic_VECTOR(7 downto 0);
    douta: OUT std_logic_VECTOR(3 downto 0));
end component;


 
-------------------------------------------------------------
 
-- The following code must appear in the VHDL architecture body.
-- Substitute your own instance name and net names.
 
your_instance_name : lotr_song
        port map (
            clka =&gt; clka,
            addra =&gt; addra,
            douta =&gt; douta);
 
		</Template>
	</Folder>
</RootFolder>
